{"version":3,"file":"dialogue-wise.js.map","sources":["ng://dialogue-wise/lib/dialogue-wise.service.ts","ng://dialogue-wise/lib/dialogue-wise.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport * as jsSHA from 'jsSHA';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogueWiseService {\n  httpClient:any;\n  apiBaseUrl:string=\"https://api.dialoguewise.com/api/\";\n\n  constructor(httpClient:HttpClient) { \n    this.httpClient=httpClient;\n  }\n\n  public getDialogue(request:DialogueWiseRequest):any{\n    let datePipe: DatePipe = new DatePipe('en-US');\n    let currentUtcDate =  new Date(new Date().toUTCString());\n    let currentUtc = datePipe.transform(new Date(currentUtcDate), 'dd/MM/yyyy hh:mm:ss a','+0000');\n    let isPilotFlag = request.isPilot?\"&isPilotVersion=true\" : \"\";\n    let apiUrl = this.apiBaseUrl + \"dialogue/getdialogue?dialogueName=\" + request.dialogueName + isPilotFlag;\n    let message = \"/api/dialogue/getdialogue:\" + currentUtc;\n    let hashMessage = this.getHash(request.apiKey,message);\n    let authentication = request.emailHash + \":\" + hashMessage;\n    console.log(currentUtcDate);\n    console.log(currentUtc);\n    console.log(authentication);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Timestamp':currentUtc,\n        'Authentication': authentication,\n        'Access-Control-Allow-Origin':'*',\n        'Access-Control-Allow-Methods': \"*\",\n        'Access-Control-Allow-Headers': 'Content-Type, Timestamp, Authentication'\n      })\n    };\n    \n    return this.httpClient.post(apiUrl,this.mapToString(request.variableList),httpOptions);\n                    \n  }\n\n  public getHash(apiKey:string,value:string):string\n  {\n    let hashValue=\"\";\n    var shaObj = new jsSHA(\"SHA-256\", \"TEXT\");\n    shaObj.setHMACKey(apiKey, \"TEXT\");\n    shaObj.update(value);\n    hashValue = shaObj.getHMAC(\"B64\");\n    return hashValue;\n\n  }\n\n  private mapToString(mapValue:Map<string,any>):string{\n    let jsonVal = JSON.stringify(\n      Array.from(\n        mapValue.entries()\n      )\n      .reduce((o, [key, value]) => { \n        o[key] = value; \n    \n        return o; \n      }, {})\n    );\n\n    return jsonVal;\n  }\n\n\n}\n\nexport class DialogueWiseRequest{\n  public dialogueName:string;\n  public isPilot:boolean;\n  public apiKey:string;\n  public emailHash:string;\n  public variableList:Map<string,any>;\n  }","import { NgModule } from '@angular/core';\nimport { DialogueWiseService } from './dialogue-wise.service';\nimport { DatePipe } from '@angular/common';\nimport {HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [HttpClientModule],\n  declarations: [],\n  exports: [],\n  providers:[DatePipe,DialogueWiseService]\n})\nexport class DialogueWiseModule { }\n"],"names":[],"mappings":";;;;;;;;;;;IAaE,6BAAY,UAAqB;0BAFf,mCAAmC;QAGnD,IAAI,CAAC,UAAU,GAAC,UAAU,CAAC;KAC5B;;;;;IAEM,yCAAW;;;;cAAC,OAA2B;;QAC5C,IAAI,QAAQ,GAAa,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;;QAC/C,IAAI,cAAc,GAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;;QACzD,IAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,uBAAuB,EAAC,OAAO,CAAC,CAAC;;QAC/F,IAAI,WAAW,GAAG,OAAO,CAAC,OAAO,GAAC,sBAAsB,GAAG,EAAE,CAAC;;QAC9D,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,oCAAoC,GAAG,OAAO,CAAC,YAAY,GAAG,WAAW,CAAC;;QACzG,IAAI,OAAO,GAAG,4BAA4B,GAAG,UAAU,CAAC;;QACxD,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC,CAAC;;QACvD,IAAI,cAAc,GAAG,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,WAAW,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;QAC5B,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,WAAW,EAAC,UAAU;gBACtB,gBAAgB,EAAE,cAAc;gBAChC,6BAA6B,EAAC,GAAG;gBACjC,8BAA8B,EAAE,GAAG;gBACnC,8BAA8B,EAAE,yCAAyC;aAC1E,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,EAAC,WAAW,CAAC,CAAC;;;;;;;IAIlF,qCAAO;;;;;cAAC,MAAa,EAAC,KAAY;;QAEvC,IAAI,SAAS,GAAC,EAAE,CAAC;;QACjB,IAAI,MAAM,GAAG,IAAI,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAC1C,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAClC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrB,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAClC,OAAO,SAAS,CAAC;;;;;;IAIX,yCAAW;;;;cAAC,QAAwB;;QAC1C,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAC1B,KAAK,CAAC,IAAI,CACR,QAAQ,CAAC,OAAO,EAAE,CACnB;aACA,MAAM,CAAC,UAAC,CAAC,EAAE,EAAY;gBAAZ,kBAAY,EAAX,WAAG,EAAE,aAAK;YACrB,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAEf,OAAO,CAAC,CAAC;SACV,EAAE,EAAE,CAAC,CACP,CAAC;QAEF,OAAO,OAAO,CAAC;;;gBA7DlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAPQ,UAAU;;;8BADnB;;IAyEA;;;8BAzEA;IA+EG;;;;;;AC/EH;;;;gBAKC,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,gBAAgB,CAAC;oBAC3B,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAE,EAAE;oBACX,SAAS,EAAC,CAAC,QAAQ,EAAC,mBAAmB,CAAC;iBACzC;;6BAVD;;;;;;;;;;;;;;;"}
